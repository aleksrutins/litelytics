// Code generated by ent, DO NOT EDIT.

package visit

const (
	// Label holds the string label denoting the visit type in the database.
	Label = "visit"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldReferer holds the string denoting the referer field in the database.
	FieldReferer = "referer"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// EdgeSite holds the string denoting the site edge name in mutations.
	EdgeSite = "site"
	// Table holds the table name of the visit in the database.
	Table = "visits"
	// SiteTable is the table that holds the site relation/edge.
	SiteTable = "visits"
	// SiteInverseTable is the table name for the Site entity.
	// It exists in this package in order to avoid circular dependency with the "site" package.
	SiteInverseTable = "sites"
	// SiteColumn is the table column denoting the site relation/edge.
	SiteColumn = "site_visits"
)

// Columns holds all SQL columns for visit fields.
var Columns = []string{
	FieldID,
	FieldPath,
	FieldReferer,
	FieldTimestamp,
	FieldIP,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "visits"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"site_visits",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
