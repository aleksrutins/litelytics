// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SitesColumns holds the columns for the "sites" table.
	SitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "domain", Type: field.TypeString, Unique: true},
	}
	// SitesTable holds the schema information for the "sites" table.
	SitesTable = &schema.Table{
		Name:       "sites",
		Columns:    SitesColumns,
		PrimaryKey: []*schema.Column{SitesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VisitsColumns holds the columns for the "visits" table.
	VisitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString},
		{Name: "referer", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "ip", Type: field.TypeString},
		{Name: "site_visits", Type: field.TypeInt},
	}
	// VisitsTable holds the schema information for the "visits" table.
	VisitsTable = &schema.Table{
		Name:       "visits",
		Columns:    VisitsColumns,
		PrimaryKey: []*schema.Column{VisitsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "visits_sites_visits",
				Columns:    []*schema.Column{VisitsColumns[5]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserSitesColumns holds the columns for the "user_sites" table.
	UserSitesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "site_id", Type: field.TypeInt},
	}
	// UserSitesTable holds the schema information for the "user_sites" table.
	UserSitesTable = &schema.Table{
		Name:       "user_sites",
		Columns:    UserSitesColumns,
		PrimaryKey: []*schema.Column{UserSitesColumns[0], UserSitesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_sites_user_id",
				Columns:    []*schema.Column{UserSitesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_sites_site_id",
				Columns:    []*schema.Column{UserSitesColumns[1]},
				RefColumns: []*schema.Column{SitesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SitesTable,
		UsersTable,
		VisitsTable,
		UserSitesTable,
	}
)

func init() {
	VisitsTable.ForeignKeys[0].RefTable = SitesTable
	UserSitesTable.ForeignKeys[0].RefTable = UsersTable
	UserSitesTable.ForeignKeys[1].RefTable = SitesTable
}
