// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// EdgeSites holds the string denoting the sites edge name in mutations.
	EdgeSites = "sites"
	// Table holds the table name of the user in the database.
	Table = "users"
	// SitesTable is the table that holds the sites relation/edge. The primary key declared below.
	SitesTable = "user_sites"
	// SitesInverseTable is the table name for the Site entity.
	// It exists in this package in order to avoid circular dependency with the "site" package.
	SitesInverseTable = "sites"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldPassword,
}

var (
	// SitesPrimaryKey and SitesColumn2 are the table columns denoting the
	// primary key for the sites relation (M2M).
	SitesPrimaryKey = []string{"user_id", "site_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
